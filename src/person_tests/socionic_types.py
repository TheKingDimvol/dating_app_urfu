from enum import Enum

class SocionicTypes(Enum):
    ENTP = 0
    ISFP = 1
    INTJ = 2
    ESFJ = 3
    ISTJ = 4
    ENFJ = 5
    ESTP = 6
    INFP = 7
    ENTJ = 8
    ISFJ = 9
    INTP = 10
    ESFP = 11
    ESTJ = 12
    INFJ = 13
    ISTP = 14
    ENFP = 15

    relations_by_id = [
        [.7, 1, .85, .9, .05, .2, .4, .5, .3, .1, .25, .15, .20, .5, .8, .6], # отношения дон
        [1, .7, .9, .85, .2, .05, .5, .4, .1, .3, .15, .25, .05, .2, .6, .8], # отношения дюма
        [.85, .9, .7, 1, .6, .8, .05, .2, .25, .15, .3, .1, .5, .4, .2, .05], # и тд
        [.9, .85, 1, .7, .8, .6, .2, .05, .15, .25, .1, .3, .4, .5, .05, .2],
        [.05, .2, .6, .8, .7, 1, .85, .9, .5, .4, .2, .05, .25, .15, .3, .1],
        [.2, .05, .7, .6, 1, .7, .9, .85, .4, .5, .05, .2, .15, .25, .2, .3],
        [.4, .5, .05, .2, .85, .9, .7, 1, .2, .05, .8, .6, .3, .1, .25, .15],
        [.5, .4, .2, .05, .9, .85, 1, .7, .05, .2, .6, .8, .1, .3, .15, .25],
        [.3, .1, .25, .15, .5, .4, .2, .05, .7, 1, .85, .9, .6, .8, .05, .2],
        [.1, .3, .15, .25, .4, .5, .05, .2, 1, .7, .9, .85, .8, .6, .2, .05],
        [.25, .15, .3, .1, .2, .05, .8, .6, .85, .9, .7, 1, .05, .2, .6, .5],
        [.15, .25, .1, .3, .05, .2, .6, .8, .9, .85, 1, .7, .2, .05, .5, .4],
        [.2, .05, .5, .4, .25, .15, .3, .1, .6, .8, .05, .2, .7, 1, .85, .9],
        [.05, .2, .4, .5, .15, .25, .1, .3, .8, .6, .2, .05, 1, .7, .9, .85],
        [.8, .6, .2, .05, .3, .1, .25, .15, .05, .2, .4, .5, .85, .9, .7, 1],
        [.6, .8, .05, .2, .1, .3, .15, .25, .2, .05, .5, .4, .9, .85, 1, .7]
    ]

    type_name = {
        'ENTP': 'Дон Кихот',
        'ISFP': 'Дюма',
        'INTJ': 'Робеспьер',
        'ESFJ': 'Гюго',
        'ISTJ': 'Максим Горький',
        'ENFJ': 'Гамлет',
        'ESTP': 'Жуков',
        'INFP': 'Есенин',
        'ENTJ': 'Джек Лондон',
        'ISFJ': 'Драйзер',
        'INTP': 'Бальзак',
        'ESFP': 'Наполеон',
        'ESTJ': 'Штирлиц',
        'INFJ': 'Достоевский',
        'ISTP': 'Габен',
        'ENFP': 'Гексли'
    }

    type_get_abbreviation = {
        'дон кихот': 'ENTP',
        'дюма': 'ISFP',
        'робеспьер': 'INTJ',
        'гюго': 'ESFJ',
        'максим горький': 'ISTJ',
        'гамлет': 'ENFJ',
        'жуков': 'ESTP',
        'eсенин': 'INFP',
        'джек лондон': 'ENTJ',
        'драйзер': 'ISFJ',
        'бальзак': 'INTP',
        'наполеон': 'ESFP',
        'штирлиц': 'ESTJ',
        'достоевский': 'INFJ',
        'габен': 'ISTP',
        'гексли': 'ENFP'
    }

    def ru_name(self):
        return SocionicTypes.type_name.value[self.name]

    @classmethod
    def to_abbreviation(cls, type: str):
        try:
            return cls.type_get_abbreviation.value[type.lower()]
        except(KeyError):
            return None


#print(SocionicTypes.ENFP.name)  #ENFP
#print(SocionicTypes(14).name)  #ENFP
#print(SocionicTypes.ENFP.ru_name())  #Гексли
#print(SocionicTypes(14).ru_name())  #Гексли
#print(SocionicTypes.to_abbreviation('Гексли')) #ENFP

#print(SocionicTypes.relations_by_id.value[0][0]) #0.7

