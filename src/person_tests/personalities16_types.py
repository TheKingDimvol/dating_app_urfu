from enum import Enum

class PersonalitiesTypes(Enum):
    ENTP = 0
    ISFP = 1
    ESFJ = 2
    INTJ = 3
    ENFJ = 4
    ISTJ = 5
    ESTP = 6
    INFP = 7
    ESFP = 8
    INTP = 9
    ENTJ = 10
    ISFJ = 11
    ESTJ = 12
    INFJ = 13
    ENFP = 14
    ISTP = 15

    relations_by_id = [
        [.9, .05, .8, .7, .5, .95, .2, .6, .1, .4, .15, 1, .85, .75, .20, .3], # отношения полемист
        [.05, .5, .75, .9, .75, .85, .4, .2, .6, .1, 1, .15, .95, .7, .3, .2], # отношения артист
        [.9, .5, .7, .05, .4, .75, .6, .75, .15, 1, .1, .3, .2, .25, .85, .95], # и тд
        [.7, .9, .05, .4, .5, .3, .95, .85, 1, .2, .25, .1, .15, .75, .75, .6],
        [.6, .7, .4, .5, .8, .05, .9, .75, .85, .95, .2, .15, .1, .3, .25, 1],
        [.95, .9, .5, .3, .05, .4, .8, .85, .75, .7, .15, .25, .6, .1, 1, .2],
        [.2, .4, .6, .95, .9, .8, .5, .05, .3, .2, .85, .8, .15, 1, .1, .75],
        [.7, .2, .75, .9, .75, .85, .05, .6, .3, .4, .95, .5, 1, .15, .25, .1],
        [.1, .6, .2, 1, .85, .75, .25, .4, .3, .05, .9, .7, .8, .95, .15, .5],
        [.5, .1, 1, .2, .95, .75, .15, .25, .05, .4, .7, .9, .8, .85, .6, .25],
        [.2, 1, .1, .5, .2, .2, .85, .95, .9, .75, .15, .05, .2, .6, .7, .8],
        [1, .15, .5, .1, .15, .4, .8, .6, .75, .9, .05, .3, .7, .2, .95, .85],
        [.85, .95, .2, .2, .1, .6, .15, 1, .8, .9, .2, .5, .4, .05, .8, .8],
        [.75, .4, .25, .7, .3, .1, 1, .15, .95, .85, .6, .2, .05, .5, .8, .9],
        [.2, .6, .9, .75, .25, 1, .1, .3, .15, .4, .7, .95, .85, .8, .5, .05],
        [.25, .15, .95, .5, 1, .2, .6, .1, .7, .3, .8, .85, .75, .9, .05, .4]
    ]

    type_name = {
        'ENTP': 'Полемист',
        'ISFP': 'Артист',
        'ESFJ': 'Опекун',
        'INTJ': 'Стратег',
        'ENFJ': 'Тренер',
        'ISTJ': 'Администратор',
        'ESTP': 'Делец',
        'INFP': 'Посредник',
        'ESFP': 'Развлекатель',
        'INTP': 'Учёный',
        'ENTJ': 'Командир',
        'ISFJ': 'Защитник',
        'ESTJ': 'Менеджер',
        'INFJ': 'Адвокат',
        'ENFP': 'Активист',
        'ISTP': 'Виртуоз'
    }

    type_get_abbreviation = {
        'полемист': 'ENTP',
        'артист': 'ISFP',
        'опекун': 'ESFJ',
        'стратег': 'INTJ',
        'тренер': 'ENFJ',
        'администратор': 'ISTJ',
        'делец': 'ESTP',
        'посредник': 'INFP',
        'развлекатель': 'ESFP',
        'учёный': 'INTP',
        'командир': 'ENTJ',
        'защитник': 'ISFJ',
        'менеджер': 'ESTJ',
        'адвокат': 'INFJ',
        'активист': 'ENFP',
        'виртуоз': 'ISTP'
    }

    def ru_name(self):
        return PersonalitiesTypes.type_name.value[self.name]

    @classmethod
    def to_abbreviation(cls, type: str):
        try:
            return cls.type_get_abbreviation.value[type.lower()]
        except(KeyError):
            return None


#print(PersonalitiesTypes.ENFP.name)  #ENFP
#print(PersonalitiesTypes(14).name)  #ENFP
#print(PersonalitiesTypes.ENFP.ru_name())  #Активист
#print(PersonalitiesTypes(14).ru_name())  #Активист
#print(PersonalitiesTypes.to_abbreviation('Активист')) #ENFP
#print(PersonalitiesTypes.relations_by_id.value[0][0]) #0.9


